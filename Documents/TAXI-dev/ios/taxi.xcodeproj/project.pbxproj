// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		028DE83022C513AC006D93F2 /* 1024.png in Resources */ = {isa = PBXBuildFile; fileRef = 028DE82F22C513AC006D93F2 /* 1024.png */; };
		06764FA4010E82B810C3199B /* libPods-Lviv.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E0AA8E6BAB816BD6B73ED7FB /* libPods-Lviv.a */; };
		0EF397882555BF4C48B0F3EA /* libPods-505.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 518FF7AD0ADB0F9A8A5EDB20 /* libPods-505.a */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C0E99222440D8AA009734EF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C0E99212440D8AA009734EF /* GoogleService-Info.plist */; };
		4C34BB3A23EAC05700AB0B1A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C34BB3B23EAC05700AB0B1A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C34BB3C23EAC05800AB0B1A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C34BB3D23EAC05800AB0B1A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C34BB3E23EAC05900AB0B1A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C34BB4123EAC09E00AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4023EAC09E00AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4523EAD1E600AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4423EAD1E500AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4723EAD1FA00AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4623EAD1FA00AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4923EAD20700AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4823EAD20700AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4B23EAD22400AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4A23EAD22400AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4D23EAD23100AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4C23EAD23000AB0B1A /* GoogleService-Info.plist */; };
		4C34BB4F23EAD24000AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB4E23EAD24000AB0B1A /* GoogleService-Info.plist */; };
		4C34BB5123EAD27B00AB0B1A /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4C34BB5023EAD27B00AB0B1A /* GoogleService-Info.plist */; };
		4C4BC0452418EA84005D8B47 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C4BC0462418EA84005D8B47 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C4BC0482418EA84005D8B47 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C4BC04B2418EA84005D8B47 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C4BC04C2418EA84005D8B47 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C4BC04D2418EA84005D8B47 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C4BC04E2418EA84005D8B47 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C4BC0502418EA84005D8B47 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C4BC0512418EA84005D8B47 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C4BC0532418EA84005D8B47 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C4BC0542418EA84005D8B47 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C4BC06A241907F3005D8B47 /* Launch ScreenLviv.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C4BC069241907F3005D8B47 /* Launch ScreenLviv.storyboard */; };
		4C5EC3F624635C04007C403E /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C885BE923E96DBA004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885BEA23E96DBA004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885BEC23E96DBA004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885BEF23E96DBA004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885BF023E96DBA004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885BF423E96DBA004724D5 /* Launch Screen505.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 6DB33664234F6F500050B36D /* Launch Screen505.storyboard */; };
		4C885BF723E96DBA004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885BFD23E96DBA004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885BFE23E96DBA004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885BFF23E96DBA004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885C0023E96DBA004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885C0E23E9A554004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885C0F23E9A554004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885C1123E9A554004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885C1423E9A554004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885C1523E9A554004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885C1C23E9A554004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885C1F23E9A554004724D5 /* Launch ScreenTern.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 6D4A54A62359FAD2000663D3 /* Launch ScreenTern.storyboard */; };
		4C885C2223E9A554004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885C2323E9A554004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885C2423E9A554004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885C2523E9A554004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885C3223E9A570004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885C3323E9A570004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885C3523E9A570004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885C3823E9A570004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885C3923E9A570004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885C3A23E9A570004724D5 /* Launch Screen6226.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C323F3F23A04B2700B3A644 /* Launch Screen6226.storyboard */; };
		4C885C4023E9A570004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885C4623E9A570004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885C4723E9A570004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885C4823E9A570004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885C4923E9A570004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885C5623E9AA2F004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885C5723E9AA2F004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885C5923E9AA2F004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885C5C23E9AA2F004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885C5D23E9AA2F004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885C6423E9AA2F004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885C6623E9AA2F004724D5 /* Launch Screen981.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C323F4123A050C500B3A644 /* Launch Screen981.storyboard */; };
		4C885C6A23E9AA2F004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885C6B23E9AA2F004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885C6C23E9AA2F004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885C6D23E9AA2F004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885C7A23E9AA3A004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885C7B23E9AA3A004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885C7D23E9AA3A004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885C8023E9AA3A004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885C8123E9AA3A004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885C8323E9AA3A004724D5 /* Launch Screen334.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C323F4323A053B500B3A644 /* Launch Screen334.storyboard */; };
		4C885C8423E9AA3A004724D5 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C885C8823E9AA3A004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885C8E23E9AA3A004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885C8F23E9AA3A004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885C9023E9AA3A004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885C9123E9AA3A004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885C9E23E9AA43004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885C9F23E9AA43004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885CA123E9AA43004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885CA423E9AA43004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885CA523E9AA43004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885CA823E9AA43004724D5 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		4C885CAC23E9AA43004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885CB123E9AA43004724D5 /* Launch ScreenVip223.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C2C7D3723B79A070098914E /* Launch ScreenVip223.storyboard */; };
		4C885CB223E9AA43004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885CB323E9AA43004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885CB423E9AA43004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885CB523E9AA43004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		4C885CC223E9AA5A004724D5 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		4C885CC323E9AA5A004724D5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		4C885CC523E9AA5A004724D5 /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		4C885CC823E9AA5A004724D5 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		4C885CC923E9AA5A004724D5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		4C885CD023E9AA5A004724D5 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		4C885CD123E9AA5A004724D5 /* Launch ScreenLana.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 4C027D2B23AFC4E300AF3715 /* Launch ScreenLana.storyboard */; };
		4C885CD623E9AA5A004724D5 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		4C885CD723E9AA5A004724D5 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		4C885CD823E9AA5A004724D5 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		4C885CD923E9AA5A004724D5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		689FD28D8D01BF6BF7CD4BB8 /* libPods-taxi.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4B1FBB3A7AAD9827FD20E373 /* libPods-taxi.a */; };
		6D85111D235EEB7C00985468 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 6D85111F235EEB7C00985468 /* InfoPlist.strings */; };
		6DB50B3A22855F99008D5DA0 /* fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6DB50B3922855F91008D5DA0 /* fontello.ttf */; };
		AA514A48ACC6766D52EBCB2C /* libPods-Ternopil.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FB5F36C88816CA0E7A70AADE /* libPods-Ternopil.a */; };
		AD3BF0CF86DE4B0485C7BE63 /* Montserrat.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 401B9557B2734DB38B684BE8 /* Montserrat.ttf */; };
		B8C4C865AFF74AAF9FB71E34 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */; };
		BBA4DAE8544D5F5305ABF168 /* libPods-334.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0B2CA4679EFCC32FAF2E13F2 /* libPods-334.a */; };
		C7C7D84618B845968BDFB283 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */; };
		C9F7CE9F0ABCCC5E10451B45 /* libPods-981.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AC37B01DFDECAD3E46DB98F4 /* libPods-981.a */; };
		CC2D8A050BFE43D18626F806 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */; };
		CFF29E6B30CEAF7F988A4097 /* libPods-Lana.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 100A06BA8E38F34A17DDFD1B /* libPods-Lana.a */; };
		DB3376915B054EA6A586E5A2 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */; };
		E30CC5D17C65529037E9234C /* libPods-vipkp223.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6F289BDA119F7D855B5B1368 /* libPods-vipkp223.a */; };
		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
		EE4BF9E18C70B4107FC99137 /* libPods-6226.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 69A5031BE1479EA47141C192 /* libPods-6226.a */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 134814201AA4EA6300B7C361;
			remoteInfo = RCTActionSheet;
		};
		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 134814201AA4EA6300B7C361;
			remoteInfo = RCTGeolocation;
		};
		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
			remoteInfo = RCTImage;
		};
		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
			remoteInfo = RCTNetwork;
		};
		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
			remoteInfo = RCTVibration;
		};
		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 134814201AA4EA6300B7C361;
			remoteInfo = RCTSettings;
		};
		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
			remoteInfo = RCTWebSocket;
		};
		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
			remoteInfo = React;
		};
		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = ADD01A681E09402E00F6D226;
			remoteInfo = "RCTBlob-tvOS";
		};
		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
			remoteInfo = fishhook;
		};
		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
			remoteInfo = "fishhook-tvOS";
		};
		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
			remoteInfo = jsinspector;
		};
		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
			remoteInfo = "jsinspector-tvOS";
		};
		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
			remoteInfo = "third-party";
		};
		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
			remoteInfo = "third-party-tvOS";
		};
		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
			remoteInfo = "double-conversion";
		};
		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
			remoteInfo = "double-conversion-tvOS";
		};
		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
			remoteInfo = "RCTImage-tvOS";
		};
		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
			remoteInfo = "RCTLinking-tvOS";
		};
		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
			remoteInfo = "RCTNetwork-tvOS";
		};
		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
			remoteInfo = "RCTSettings-tvOS";
		};
		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
			remoteInfo = "RCTText-tvOS";
		};
		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
			remoteInfo = "RCTWebSocket-tvOS";
		};
		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
			remoteInfo = "React-tvOS";
		};
		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
			remoteInfo = yoga;
		};
		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
			remoteInfo = "yoga-tvOS";
		};
		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
			remoteInfo = cxxreact;
		};
		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
			remoteInfo = "cxxreact-tvOS";
		};
		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 134814201AA4EA6300B7C361;
			remoteInfo = RCTAnimation;
		};
		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
			remoteInfo = "RCTAnimation-tvOS";
		};
		6DB50B1A22855EA4008D5DA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = EDEBC6D6214B3E7000DD5AC8;
			remoteInfo = jsi;
		};
		6DB50B1C22855EA4008D5DA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = EDEBC73B214B45A300DD5AC8;
			remoteInfo = jsiexecutor;
		};
		6DB50B1E22855EA4008D5DA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = ED296FB6214C9A0900B7C4FE;
			remoteInfo = "jsi-tvOS";
		};
		6DB50B2022855EA4008D5DA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = ED296FEE214C9CF800B7C4FE;
			remoteInfo = "jsiexecutor-tvOS";
		};
		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 134814201AA4EA6300B7C361;
			remoteInfo = RCTLinking;
		};
		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
			remoteInfo = RCTText;
		};
		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
			remoteInfo = RCTBlob;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
		028DE82F22C513AC006D93F2 /* 1024.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = 1024.png; sourceTree = "<group>"; };
		02A31C392318216B00A88AB5 /* taxi.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = taxi.entitlements; path = taxi/taxi.entitlements; sourceTree = "<group>"; };
		09C567BA811211554A7BD35B /* Pods-taxi.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-taxi.debug.xcconfig"; path = "Target Support Files/Pods-taxi/Pods-taxi.debug.xcconfig"; sourceTree = "<group>"; };
		0A66160C9D2091090A4D99D2 /* Pods-taxi.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-taxi.release.xcconfig"; path = "Target Support Files/Pods-taxi/Pods-taxi.release.xcconfig"; sourceTree = "<group>"; };
		0B2CA4679EFCC32FAF2E13F2 /* libPods-334.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-334.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		100A06BA8E38F34A17DDFD1B /* libPods-Lana.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Lana.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
		13B07F961A680F5B00A75B9A /* Ok.2299.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Ok.2299.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = taxi/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = taxi/AppDelegate.m; sourceTree = "<group>"; };
		13B07FB21A68108700A75B9A /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/LaunchScreen.xib; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = taxi/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = taxi/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = taxi/main.m; sourceTree = "<group>"; };
		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
		180DECBFB49FAD1CA44FE1E1 /* Pods-Lviv.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Lviv.release.xcconfig"; path = "Target Support Files/Pods-Lviv/Pods-Lviv.release.xcconfig"; sourceTree = "<group>"; };
		2CFECB328555EC802B70F545 /* Pods-981.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-981.debug.xcconfig"; path = "Target Support Files/Pods-981/Pods-981.debug.xcconfig"; sourceTree = "<group>"; };
		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
		401B9557B2734DB38B684BE8 /* Montserrat.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Montserrat.ttf; path = ../assets/fonts/Montserrat.ttf; sourceTree = "<group>"; };
		4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Montserrat-Medium.ttf"; path = "../assets/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; };
		4B1FBB3A7AAD9827FD20E373 /* libPods-taxi.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-taxi.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C027D2B23AFC4E300AF3715 /* Launch ScreenLana.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch ScreenLana.storyboard"; sourceTree = "<group>"; };
		4C0E99212440D8AA009734EF /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/clientLviv/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C2C7D3723B79A070098914E /* Launch ScreenVip223.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch ScreenVip223.storyboard"; sourceTree = "<group>"; };
		4C323F3F23A04B2700B3A644 /* Launch Screen6226.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch Screen6226.storyboard"; sourceTree = "<group>"; };
		4C323F4123A050C500B3A644 /* Launch Screen981.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch Screen981.storyboard"; sourceTree = "<group>"; };
		4C323F4323A053B500B3A644 /* Launch Screen334.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch Screen334.storyboard"; sourceTree = "<group>"; };
		4C34BB4023EAC09E00AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/oktaxi2299/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4423EAD1E500AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/taxi505/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4623EAD1FA00AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/client2299tern/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4823EAD20700AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/client6226khm/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4A23EAD22400AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/client981khm/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4C23EAD23000AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/client334khm/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB4E23EAD24000AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/vipkp223/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C34BB5023EAD27B00AB0B1A /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Firebase/clientLana/GoogleService-Info.plist"; sourceTree = "<group>"; };
		4C4BC05B2418EA84005D8B47 /* Економ 7070.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Економ 7070.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C4BC069241907F3005D8B47 /* Launch ScreenLviv.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch ScreenLviv.storyboard"; sourceTree = "<group>"; };
		4C885C0723E96DBA004724D5 /* Такси 505.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Такси 505.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885C2C23E9A554004724D5 /* Таксі Комфорт Тернопіль.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Таксі Комфорт Тернопіль.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885C5023E9A570004724D5 /* Таксi 6226.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Таксi 6226.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885C7423E9AA2F004724D5 /* Таксi 981.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Таксi 981.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885C9823E9AA3A004724D5 /* Таксі 334.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Таксі 334.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885CBC23E9AA43004724D5 /* VIP Таксi Кам'янець-Подiльський.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "VIP Таксi Кам'янець-Подiльський.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4C885CE023E9AA5A004724D5 /* Таксі Lana.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Таксі Lana.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Montserrat-Bold.ttf"; path = "../assets/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; };
		518FF7AD0ADB0F9A8A5EDB20 /* libPods-505.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-505.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		58656E16CBFCBFA5FEAF06BF /* Pods-505.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-505.release.xcconfig"; path = "Target Support Files/Pods-505/Pods-505.release.xcconfig"; sourceTree = "<group>"; };
		5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Montserrat-Regular.ttf"; path = "../assets/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; };
		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
		69A5031BE1479EA47141C192 /* libPods-6226.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-6226.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		69E6392159BF3E3148AFF3F8 /* Pods-Ternopil.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Ternopil.release.xcconfig"; path = "Target Support Files/Pods-Ternopil/Pods-Ternopil.release.xcconfig"; sourceTree = "<group>"; };
		6CC8C0D0DE45305899F14D37 /* Pods-6226.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-6226.debug.xcconfig"; path = "Target Support Files/Pods-6226/Pods-6226.debug.xcconfig"; sourceTree = "<group>"; };
		6D4A54A62359FAD2000663D3 /* Launch ScreenTern.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch ScreenTern.storyboard"; sourceTree = "<group>"; };
		6D85111E235EEB7C00985468 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		6D851154235EFB2800985468 /* uk */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = uk; path = uk.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		6D851156235EFB3900985468 /* ru */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = ru; path = ru.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		6DB33664234F6F500050B36D /* Launch Screen505.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "Launch Screen505.storyboard"; sourceTree = "<group>"; };
		6DB50B3922855F91008D5DA0 /* fontello.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; name = fontello.ttf; path = ../assets/fonts/fontello.ttf; sourceTree = "<group>"; };
		6F289BDA119F7D855B5B1368 /* libPods-vipkp223.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-vipkp223.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		6F530F1F4E468540184B0BFC /* Pods-vipkp223.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-vipkp223.release.xcconfig"; path = "Target Support Files/Pods-vipkp223/Pods-vipkp223.release.xcconfig"; sourceTree = "<group>"; };
		7378EF677DA24DF3B1B5F1B2 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
		752B4923DEB5AD337B99C37F /* Pods-334.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-334.release.xcconfig"; path = "Target Support Files/Pods-334/Pods-334.release.xcconfig"; sourceTree = "<group>"; };
		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
		83A67EADCE5BC7F69433006F /* Pods-vipkp223.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-vipkp223.debug.xcconfig"; path = "Target Support Files/Pods-vipkp223/Pods-vipkp223.debug.xcconfig"; sourceTree = "<group>"; };
		863FAD85D06F7634CEED6374 /* Pods-Lviv.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Lviv.debug.xcconfig"; path = "Target Support Files/Pods-Lviv/Pods-Lviv.debug.xcconfig"; sourceTree = "<group>"; };
		88E65EB2DF8B22190FEAA6F3 /* Pods-6226.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-6226.release.xcconfig"; path = "Target Support Files/Pods-6226/Pods-6226.release.xcconfig"; sourceTree = "<group>"; };
		8A0942118690D6C32B964742 /* Pods-Lana.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Lana.debug.xcconfig"; path = "Target Support Files/Pods-Lana/Pods-Lana.debug.xcconfig"; sourceTree = "<group>"; };
		9A9B490ADCCB256A2E03452B /* Pods-Lana.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Lana.release.xcconfig"; path = "Target Support Files/Pods-Lana/Pods-Lana.release.xcconfig"; sourceTree = "<group>"; };
		9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Montserrat-SemiBold.ttf"; path = "../assets/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; };
		AC37B01DFDECAD3E46DB98F4 /* libPods-981.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-981.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
		C17DB32C7155A43798365F3F /* Pods-981.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-981.release.xcconfig"; path = "Target Support Files/Pods-981/Pods-981.release.xcconfig"; sourceTree = "<group>"; };
		C57A3CF157A67DB32398D689 /* Pods-334.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-334.debug.xcconfig"; path = "Target Support Files/Pods-334/Pods-334.debug.xcconfig"; sourceTree = "<group>"; };
		E0AA8E6BAB816BD6B73ED7FB /* libPods-Lviv.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Lviv.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
		F7514C9F55F1D6301AEEA065 /* Pods-505.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-505.debug.xcconfig"; path = "Target Support Files/Pods-505/Pods-505.debug.xcconfig"; sourceTree = "<group>"; };
		F78D45C8FA972927267E3CE6 /* Pods-Ternopil.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Ternopil.debug.xcconfig"; path = "Target Support Files/Pods-Ternopil/Pods-Ternopil.debug.xcconfig"; sourceTree = "<group>"; };
		FB5F36C88816CA0E7A70AADE /* libPods-Ternopil.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Ternopil.a"; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
				689FD28D8D01BF6BF7CD4BB8 /* libPods-taxi.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C4BC0472418EA84005D8B47 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C4BC0482418EA84005D8B47 /* JavaScriptCore.framework in Frameworks */,
				06764FA4010E82B810C3199B /* libPods-Lviv.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885BEB23E96DBA004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885BEC23E96DBA004724D5 /* JavaScriptCore.framework in Frameworks */,
				0EF397882555BF4C48B0F3EA /* libPods-505.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C1023E9A554004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C1123E9A554004724D5 /* JavaScriptCore.framework in Frameworks */,
				AA514A48ACC6766D52EBCB2C /* libPods-Ternopil.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C3423E9A570004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C3523E9A570004724D5 /* JavaScriptCore.framework in Frameworks */,
				EE4BF9E18C70B4107FC99137 /* libPods-6226.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C5823E9AA2F004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C5923E9AA2F004724D5 /* JavaScriptCore.framework in Frameworks */,
				C9F7CE9F0ABCCC5E10451B45 /* libPods-981.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C7C23E9AA3A004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C7D23E9AA3A004724D5 /* JavaScriptCore.framework in Frameworks */,
				BBA4DAE8544D5F5305ABF168 /* libPods-334.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885CA023E9AA43004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885CA123E9AA43004724D5 /* JavaScriptCore.framework in Frameworks */,
				E30CC5D17C65529037E9234C /* libPods-vipkp223.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885CC423E9AA5A004724D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885CC523E9AA5A004724D5 /* JavaScriptCore.framework in Frameworks */,
				CFF29E6B30CEAF7F988A4097 /* libPods-Lana.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
			isa = PBXGroup;
			children = (
				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		00C302B61ABCB90400DB3ED1 /* Products */ = {
			isa = PBXGroup;
			children = (
				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		00C302BC1ABCB91800DB3ED1 /* Products */ = {
			isa = PBXGroup;
			children = (
				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		00C302D41ABCB9D200DB3ED1 /* Products */ = {
			isa = PBXGroup;
			children = (
				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
			isa = PBXGroup;
			children = (
				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		139105B71AF99BAD00B5F7CC /* Products */ = {
			isa = PBXGroup;
			children = (
				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		139FDEE71B06529A00C62182 /* Products */ = {
			isa = PBXGroup;
			children = (
				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* taxi */ = {
			isa = PBXGroup;
			children = (
				4C2C7D3723B79A070098914E /* Launch ScreenVip223.storyboard */,
				4C34BB4A23EAD22400AB0B1A /* GoogleService-Info.plist */,
				02A31C392318216B00A88AB5 /* taxi.entitlements */,
				4C0E99212440D8AA009734EF /* GoogleService-Info.plist */,
				028DE82F22C513AC006D93F2 /* 1024.png */,
				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				4C34BB4C23EAD23000AB0B1A /* GoogleService-Info.plist */,
				4C34BB5023EAD27B00AB0B1A /* GoogleService-Info.plist */,
				13B07FB01A68108700A75B9A /* AppDelegate.m */,
				4C34BB4023EAC09E00AB0B1A /* GoogleService-Info.plist */,
				4C34BB4423EAD1E500AB0B1A /* GoogleService-Info.plist */,
				4C34BB4623EAD1FA00AB0B1A /* GoogleService-Info.plist */,
				4C34BB4823EAD20700AB0B1A /* GoogleService-Info.plist */,
				4C34BB4E23EAD24000AB0B1A /* GoogleService-Info.plist */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB11A68108700A75B9A /* LaunchScreen.xib */,
				4C027D2B23AFC4E300AF3715 /* Launch ScreenLana.storyboard */,
				13B07FB71A68108700A75B9A /* main.m */,
				6DB33664234F6F500050B36D /* Launch Screen505.storyboard */,
				6D4A54A62359FAD2000663D3 /* Launch ScreenTern.storyboard */,
				6D85111F235EEB7C00985468 /* InfoPlist.strings */,
				4C323F3F23A04B2700B3A644 /* Launch Screen6226.storyboard */,
				4C323F4123A050C500B3A644 /* Launch Screen981.storyboard */,
				4C323F4323A053B500B3A644 /* Launch Screen334.storyboard */,
				4C4BC069241907F3005D8B47 /* Launch ScreenLviv.storyboard */,
			);
			name = taxi;
			sourceTree = "<group>";
		};
		146834001AC3E56700842450 /* Products */ = {
			isa = PBXGroup;
			children = (
				146834041AC3E56700842450 /* libReact.a */,
				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
				2DF0FFE32056DD460020B375 /* libthird-party.a */,
				2DF0FFE52056DD460020B375 /* libthird-party.a */,
				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
				6DB50B1B22855EA4008D5DA0 /* libjsi.a */,
				6DB50B1D22855EA4008D5DA0 /* libjsiexecutor.a */,
				6DB50B1F22855EA4008D5DA0 /* libjsi-tvOS.a */,
				6DB50B2122855EA4008D5DA0 /* libjsiexecutor-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
				2D16E6891FA4F8E400B85C8A /* libReact.a */,
				4B1FBB3A7AAD9827FD20E373 /* libPods-taxi.a */,
				0B2CA4679EFCC32FAF2E13F2 /* libPods-334.a */,
				518FF7AD0ADB0F9A8A5EDB20 /* libPods-505.a */,
				69A5031BE1479EA47141C192 /* libPods-6226.a */,
				AC37B01DFDECAD3E46DB98F4 /* libPods-981.a */,
				100A06BA8E38F34A17DDFD1B /* libPods-Lana.a */,
				FB5F36C88816CA0E7A70AADE /* libPods-Ternopil.a */,
				6F289BDA119F7D855B5B1368 /* libPods-vipkp223.a */,
				E0AA8E6BAB816BD6B73ED7FB /* libPods-Lviv.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
			isa = PBXGroup;
			children = (
				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		6DB50AF422855E9F008D5DA0 /* Recovered References */ = {
			isa = PBXGroup;
			children = (
				7378EF677DA24DF3B1B5F1B2 /* libAirMaps.a */,
			);
			name = "Recovered References";
			sourceTree = "<group>";
		};
		78C398B11ACF4ADC00677621 /* Products */ = {
			isa = PBXGroup;
			children = (
				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
				146833FF1AC3E56700842450 /* React.xcodeproj */,
				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		832341B11AAA6A8300B99B32 /* Products */ = {
			isa = PBXGroup;
			children = (
				832341B51AAA6A8300B99B32 /* libRCTText.a */,
				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				13B07FAE1A68108700A75B9A /* taxi */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				8634FB7758D641BC88BE2F4F /* Resources */,
				6DB50AF422855E9F008D5DA0 /* Recovered References */,
				C837F5425261FA0D5C97579B /* Pods */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* Ok.2299.app */,
				4C885C0723E96DBA004724D5 /* Такси 505.app */,
				4C885C2C23E9A554004724D5 /* Таксі Комфорт Тернопіль.app */,
				4C885C5023E9A570004724D5 /* Таксi 6226.app */,
				4C885C7423E9AA2F004724D5 /* Таксi 981.app */,
				4C885C9823E9AA3A004724D5 /* Таксі 334.app */,
				4C885CBC23E9AA43004724D5 /* VIP Таксi Кам'янець-Подiльський.app */,
				4C885CE023E9AA5A004724D5 /* Таксі Lana.app */,
				4C4BC05B2418EA84005D8B47 /* Економ 7070.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		8634FB7758D641BC88BE2F4F /* Resources */ = {
			isa = PBXGroup;
			children = (
				6DB50B3922855F91008D5DA0 /* fontello.ttf */,
				401B9557B2734DB38B684BE8 /* Montserrat.ttf */,
				4FF84C381C1A4B86A48EA1F2 /* Montserrat-Bold.ttf */,
				4AF808AAD92E4E97B6161B74 /* Montserrat-Medium.ttf */,
				5CEFFE6D5E234336BB1A60A3 /* Montserrat-Regular.ttf */,
				9BE60D5F409A410EAAA31019 /* Montserrat-SemiBold.ttf */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		ADBDB9201DFEBF0600ED6528 /* Products */ = {
			isa = PBXGroup;
			children = (
				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		C837F5425261FA0D5C97579B /* Pods */ = {
			isa = PBXGroup;
			children = (
				09C567BA811211554A7BD35B /* Pods-taxi.debug.xcconfig */,
				0A66160C9D2091090A4D99D2 /* Pods-taxi.release.xcconfig */,
				C57A3CF157A67DB32398D689 /* Pods-334.debug.xcconfig */,
				752B4923DEB5AD337B99C37F /* Pods-334.release.xcconfig */,
				F7514C9F55F1D6301AEEA065 /* Pods-505.debug.xcconfig */,
				58656E16CBFCBFA5FEAF06BF /* Pods-505.release.xcconfig */,
				6CC8C0D0DE45305899F14D37 /* Pods-6226.debug.xcconfig */,
				88E65EB2DF8B22190FEAA6F3 /* Pods-6226.release.xcconfig */,
				2CFECB328555EC802B70F545 /* Pods-981.debug.xcconfig */,
				C17DB32C7155A43798365F3F /* Pods-981.release.xcconfig */,
				8A0942118690D6C32B964742 /* Pods-Lana.debug.xcconfig */,
				9A9B490ADCCB256A2E03452B /* Pods-Lana.release.xcconfig */,
				F78D45C8FA972927267E3CE6 /* Pods-Ternopil.debug.xcconfig */,
				69E6392159BF3E3148AFF3F8 /* Pods-Ternopil.release.xcconfig */,
				83A67EADCE5BC7F69433006F /* Pods-vipkp223.debug.xcconfig */,
				6F530F1F4E468540184B0BFC /* Pods-vipkp223.release.xcconfig */,
				863FAD85D06F7634CEED6374 /* Pods-Lviv.debug.xcconfig */,
				180DECBFB49FAD1CA44FE1E1 /* Pods-Lviv.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		13B07F861A680F5B00A75B9A /* taxi */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "taxi" */;
			buildPhases = (
				04009B97EC9F6133FD444FFE /* [CP] Check Pods Manifest.lock */,
				4CFC972823D222AC003A00A7 /* SomeScript */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				1C138DB827C4C2F6B73BE2A0 /* [CP] Copy Pods Resources */,
				0A35585BCE5A2A73B1FE840B /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = taxi;
			productName = "Hello World";
			productReference = 13B07F961A680F5B00A75B9A /* Ok.2299.app */;
			productType = "com.apple.product-type.application";
		};
		4C4BC0412418EA84005D8B47 /* Lviv */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C4BC0582418EA84005D8B47 /* Build configuration list for PBXNativeTarget "Lviv" */;
			buildPhases = (
				4C4BC0422418EA84005D8B47 /* [CP] Check Pods Manifest.lock */,
				4C4BC0432418EA84005D8B47 /* SomeScript */,
				4C4BC0442418EA84005D8B47 /* Sources */,
				4C4BC0472418EA84005D8B47 /* Frameworks */,
				4C4BC04A2418EA84005D8B47 /* Resources */,
				4C4BC0552418EA84005D8B47 /* Bundle React Native code and images */,
				4C4BC0562418EA84005D8B47 /* [CP] Copy Pods Resources */,
				4C4BC0572418EA84005D8B47 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Lviv;
			productName = "Hello World";
			productReference = 4C4BC05B2418EA84005D8B47 /* Економ 7070.app */;
			productType = "com.apple.product-type.application";
		};
		4C885BE523E96DBA004724D5 /* 505 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885C0423E96DBA004724D5 /* Build configuration list for PBXNativeTarget "505" */;
			buildPhases = (
				EDE18A6EB166FF88652195B5 /* [CP] Check Pods Manifest.lock */,
				4C885BE723E96DBA004724D5 /* SomeScript */,
				4C885BE823E96DBA004724D5 /* Sources */,
				4C885BEB23E96DBA004724D5 /* Frameworks */,
				4C885BEE23E96DBA004724D5 /* Resources */,
				4C885C0123E96DBA004724D5 /* Bundle React Native code and images */,
				A3553712319243C3B42861B0 /* [CP] Copy Pods Resources */,
				7ED57DCEAB1C197D3BCC9B7E /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = 505;
			productName = "Hello World";
			productReference = 4C885C0723E96DBA004724D5 /* Такси 505.app */;
			productType = "com.apple.product-type.application";
		};
		4C885C0A23E9A554004724D5 /* Ternopil */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885C2923E9A554004724D5 /* Build configuration list for PBXNativeTarget "Ternopil" */;
			buildPhases = (
				1F19EE709E7209A98D19BBC3 /* [CP] Check Pods Manifest.lock */,
				4C885C0C23E9A554004724D5 /* SomeScript */,
				4C885C0D23E9A554004724D5 /* Sources */,
				4C885C1023E9A554004724D5 /* Frameworks */,
				4C885C1323E9A554004724D5 /* Resources */,
				4C885C2623E9A554004724D5 /* Bundle React Native code and images */,
				74BB549A92BFAFD988C032FB /* [CP] Copy Pods Resources */,
				A922A19609B95192C869BBB4 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Ternopil;
			productName = "Hello World";
			productReference = 4C885C2C23E9A554004724D5 /* Таксі Комфорт Тернопіль.app */;
			productType = "com.apple.product-type.application";
		};
		4C885C2E23E9A570004724D5 /* 6226 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885C4D23E9A570004724D5 /* Build configuration list for PBXNativeTarget "6226" */;
			buildPhases = (
				AF8F54AFD36B8A686AE87D70 /* [CP] Check Pods Manifest.lock */,
				4C885C3023E9A570004724D5 /* SomeScript */,
				4C885C3123E9A570004724D5 /* Sources */,
				4C885C3423E9A570004724D5 /* Frameworks */,
				4C885C3723E9A570004724D5 /* Resources */,
				4C885C4A23E9A570004724D5 /* Bundle React Native code and images */,
				0829BA4CFB39561DDF9C7867 /* [CP] Copy Pods Resources */,
				10608032D41054CAEF32756B /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = 6226;
			productName = "Hello World";
			productReference = 4C885C5023E9A570004724D5 /* Таксi 6226.app */;
			productType = "com.apple.product-type.application";
		};
		4C885C5223E9AA2F004724D5 /* 981 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885C7123E9AA2F004724D5 /* Build configuration list for PBXNativeTarget "981" */;
			buildPhases = (
				27B57751B87424850F3E8EAB /* [CP] Check Pods Manifest.lock */,
				4C885C5423E9AA2F004724D5 /* SomeScript */,
				4C885C5523E9AA2F004724D5 /* Sources */,
				4C885C5823E9AA2F004724D5 /* Frameworks */,
				4C885C5B23E9AA2F004724D5 /* Resources */,
				4C885C6E23E9AA2F004724D5 /* Bundle React Native code and images */,
				C7761CC2F9FE1090258B7B50 /* [CP] Copy Pods Resources */,
				B2741E56D3B3C5629BCDD712 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = 981;
			productName = "Hello World";
			productReference = 4C885C7423E9AA2F004724D5 /* Таксi 981.app */;
			productType = "com.apple.product-type.application";
		};
		4C885C7623E9AA3A004724D5 /* 334 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885C9523E9AA3A004724D5 /* Build configuration list for PBXNativeTarget "334" */;
			buildPhases = (
				C5806A47FD2148F7C20D827B /* [CP] Check Pods Manifest.lock */,
				4C885C7823E9AA3A004724D5 /* SomeScript */,
				4C885C7923E9AA3A004724D5 /* Sources */,
				4C885C7C23E9AA3A004724D5 /* Frameworks */,
				4C885C7F23E9AA3A004724D5 /* Resources */,
				4C885C9223E9AA3A004724D5 /* Bundle React Native code and images */,
				388E4908200D637D5020CC80 /* [CP] Copy Pods Resources */,
				ECB0635C628B1EC00523CA6D /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = 334;
			productName = "Hello World";
			productReference = 4C885C9823E9AA3A004724D5 /* Таксі 334.app */;
			productType = "com.apple.product-type.application";
		};
		4C885C9A23E9AA43004724D5 /* vipkp223 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885CB923E9AA43004724D5 /* Build configuration list for PBXNativeTarget "vipkp223" */;
			buildPhases = (
				7BCF21EC77C8957DE172AB69 /* [CP] Check Pods Manifest.lock */,
				4C885C9C23E9AA43004724D5 /* SomeScript */,
				4C885C9D23E9AA43004724D5 /* Sources */,
				4C885CA023E9AA43004724D5 /* Frameworks */,
				4C885CA323E9AA43004724D5 /* Resources */,
				4C885CB623E9AA43004724D5 /* Bundle React Native code and images */,
				314859DE50AB236F84737EE1 /* [CP] Copy Pods Resources */,
				AEBA59053D430F8E826434C1 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = vipkp223;
			productName = "Hello World";
			productReference = 4C885CBC23E9AA43004724D5 /* VIP Таксi Кам'янець-Подiльський.app */;
			productType = "com.apple.product-type.application";
		};
		4C885CBE23E9AA5A004724D5 /* Lana */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C885CDD23E9AA5A004724D5 /* Build configuration list for PBXNativeTarget "Lana" */;
			buildPhases = (
				472A323E59212982C113A2AE /* [CP] Check Pods Manifest.lock */,
				4C885CC023E9AA5A004724D5 /* SomeScript */,
				4C885CC123E9AA5A004724D5 /* Sources */,
				4C885CC423E9AA5A004724D5 /* Frameworks */,
				4C885CC723E9AA5A004724D5 /* Resources */,
				4C885CDA23E9AA5A004724D5 /* Bundle React Native code and images */,
				430495608EC4AB078E065F2E /* [CP] Copy Pods Resources */,
				B7D397A3B2DC5703ECF4ABDC /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Lana;
			productName = "Hello World";
			productReference = 4C885CE023E9AA5A004724D5 /* Таксі Lana.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1020;
				ORGANIZATIONNAME = Facebook;
				TargetAttributes = {
					13B07F861A680F5B00A75B9A = {
						DevelopmentTeam = P8HU8BF4TT;
						SystemCapabilities = {
							com.apple.BackgroundModes = {
								enabled = 1;
							};
							com.apple.Push = {
								enabled = 1;
							};
							com.apple.SafariKeychain = {
								enabled = 1;
							};
						};
					};
					4C4BC0412418EA84005D8B47 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885BE523E96DBA004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885C0A23E9A554004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885C2E23E9A570004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885C5223E9AA2F004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885C7623E9AA3A004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885C9A23E9AA43004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
					4C885CBE23E9AA5A004724D5 = {
						DevelopmentTeam = P8HU8BF4TT;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "taxi" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
				uk,
				ru,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectReferences = (
				{
					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
				},
				{
					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
				},
				{
					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
				},
				{
					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
				},
				{
					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
				},
				{
					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
				},
				{
					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
				},
				{
					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
				},
				{
					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
				},
				{
					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
				},
				{
					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
				},
				{
					ProductGroup = 146834001AC3E56700842450 /* Products */;
					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
				},
			);
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* taxi */,
				4C885BE523E96DBA004724D5 /* 505 */,
				4C885C0A23E9A554004724D5 /* Ternopil */,
				4C885C2E23E9A570004724D5 /* 6226 */,
				4C885C5223E9AA2F004724D5 /* 981 */,
				4C885C7623E9AA3A004724D5 /* 334 */,
				4C885C9A23E9AA43004724D5 /* vipkp223 */,
				4C885CBE23E9AA5A004724D5 /* Lana */,
				4C4BC0412418EA84005D8B47 /* Lviv */,
			);
		};
/* End PBXProject section */

/* Begin PBXReferenceProxy section */
		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTActionSheet.a;
			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTGeolocation.a;
			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTImage.a;
			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTNetwork.a;
			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTVibration.a;
			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTSettings.a;
			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTWebSocket.a;
			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		146834041AC3E56700842450 /* libReact.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libReact.a;
			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTBlob-tvOS.a";
			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libfishhook.a;
			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libfishhook-tvOS.a";
			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libjsinspector.a;
			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libjsinspector-tvOS.a";
			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libthird-party.a";
			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libthird-party.a";
			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libdouble-conversion.a";
			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libdouble-conversion.a";
			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTImage-tvOS.a";
			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTLinking-tvOS.a";
			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTNetwork-tvOS.a";
			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTSettings-tvOS.a";
			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTText-tvOS.a";
			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libRCTWebSocket-tvOS.a";
			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libReact.a;
			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libyoga.a;
			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libyoga.a;
			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libcxxreact.a;
			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libcxxreact.a;
			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTAnimation.a;
			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTAnimation.a;
			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		6DB50B1B22855EA4008D5DA0 /* libjsi.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libjsi.a;
			remoteRef = 6DB50B1A22855EA4008D5DA0 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		6DB50B1D22855EA4008D5DA0 /* libjsiexecutor.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libjsiexecutor.a;
			remoteRef = 6DB50B1C22855EA4008D5DA0 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		6DB50B1F22855EA4008D5DA0 /* libjsi-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libjsi-tvOS.a";
			remoteRef = 6DB50B1E22855EA4008D5DA0 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		6DB50B2122855EA4008D5DA0 /* libjsiexecutor-tvOS.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = "libjsiexecutor-tvOS.a";
			remoteRef = 6DB50B2022855EA4008D5DA0 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTLinking.a;
			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTText.a;
			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
			isa = PBXReferenceProxy;
			fileType = archive.ar;
			path = libRCTBlob.a;
			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
/* End PBXReferenceProxy section */

/* Begin PBXResourcesBuildPhase section */
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6DB50B3A22855F99008D5DA0 /* fontello.ttf in Resources */,
				4C34BB3A23EAC05700AB0B1A /* Images.xcassets in Resources */,
				6D85111D235EEB7C00985468 /* InfoPlist.strings in Resources */,
				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
				028DE83022C513AC006D93F2 /* 1024.png in Resources */,
				4C34BB4123EAC09E00AB0B1A /* GoogleService-Info.plist in Resources */,
				AD3BF0CF86DE4B0485C7BE63 /* Montserrat.ttf in Resources */,
				DB3376915B054EA6A586E5A2 /* Montserrat-Bold.ttf in Resources */,
				C7C7D84618B845968BDFB283 /* Montserrat-Medium.ttf in Resources */,
				CC2D8A050BFE43D18626F806 /* Montserrat-Regular.ttf in Resources */,
				B8C4C865AFF74AAF9FB71E34 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C4BC04A2418EA84005D8B47 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C4BC04B2418EA84005D8B47 /* fontello.ttf in Resources */,
				4C4BC04C2418EA84005D8B47 /* InfoPlist.strings in Resources */,
				4C4BC04D2418EA84005D8B47 /* Images.xcassets in Resources */,
				4C4BC04E2418EA84005D8B47 /* Montserrat.ttf in Resources */,
				4C0E99222440D8AA009734EF /* GoogleService-Info.plist in Resources */,
				4C4BC0502418EA84005D8B47 /* Montserrat-Bold.ttf in Resources */,
				4C4BC0512418EA84005D8B47 /* Montserrat-Medium.ttf in Resources */,
				4C4BC06A241907F3005D8B47 /* Launch ScreenLviv.storyboard in Resources */,
				4C4BC0532418EA84005D8B47 /* Montserrat-Regular.ttf in Resources */,
				4C4BC0542418EA84005D8B47 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885BEE23E96DBA004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C34BB3B23EAC05700AB0B1A /* Images.xcassets in Resources */,
				4C885BEF23E96DBA004724D5 /* fontello.ttf in Resources */,
				4C885BF023E96DBA004724D5 /* InfoPlist.strings in Resources */,
				4C885BF423E96DBA004724D5 /* Launch Screen505.storyboard in Resources */,
				4C885BF723E96DBA004724D5 /* Montserrat.ttf in Resources */,
				4C885BFD23E96DBA004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885BFE23E96DBA004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4523EAD1E600AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885BFF23E96DBA004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885C0023E96DBA004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C1323E9A554004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C34BB3C23EAC05800AB0B1A /* Images.xcassets in Resources */,
				4C885C1423E9A554004724D5 /* fontello.ttf in Resources */,
				4C885C1523E9A554004724D5 /* InfoPlist.strings in Resources */,
				4C885C1C23E9A554004724D5 /* Montserrat.ttf in Resources */,
				4C885C1F23E9A554004724D5 /* Launch ScreenTern.storyboard in Resources */,
				4C885C2223E9A554004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885C2323E9A554004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4723EAD1FA00AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885C2423E9A554004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885C2523E9A554004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C3723E9A570004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C34BB3D23EAC05800AB0B1A /* Images.xcassets in Resources */,
				4C885C3823E9A570004724D5 /* fontello.ttf in Resources */,
				4C885C3923E9A570004724D5 /* InfoPlist.strings in Resources */,
				4C885C3A23E9A570004724D5 /* Launch Screen6226.storyboard in Resources */,
				4C885C4023E9A570004724D5 /* Montserrat.ttf in Resources */,
				4C885C4623E9A570004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885C4723E9A570004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4923EAD20700AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885C4823E9A570004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885C4923E9A570004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C5B23E9AA2F004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C34BB3E23EAC05900AB0B1A /* Images.xcassets in Resources */,
				4C885C5C23E9AA2F004724D5 /* fontello.ttf in Resources */,
				4C885C5D23E9AA2F004724D5 /* InfoPlist.strings in Resources */,
				4C885C6423E9AA2F004724D5 /* Montserrat.ttf in Resources */,
				4C885C6623E9AA2F004724D5 /* Launch Screen981.storyboard in Resources */,
				4C885C6A23E9AA2F004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885C6B23E9AA2F004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4B23EAD22400AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885C6C23E9AA2F004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885C6D23E9AA2F004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C7F23E9AA3A004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C8023E9AA3A004724D5 /* fontello.ttf in Resources */,
				4C885C8123E9AA3A004724D5 /* InfoPlist.strings in Resources */,
				4C885C8323E9AA3A004724D5 /* Launch Screen334.storyboard in Resources */,
				4C885C8423E9AA3A004724D5 /* Images.xcassets in Resources */,
				4C885C8823E9AA3A004724D5 /* Montserrat.ttf in Resources */,
				4C885C8E23E9AA3A004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885C8F23E9AA3A004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4D23EAD23100AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885C9023E9AA3A004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885C9123E9AA3A004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885CA323E9AA43004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885CA423E9AA43004724D5 /* fontello.ttf in Resources */,
				4C885CA523E9AA43004724D5 /* InfoPlist.strings in Resources */,
				4C885CA823E9AA43004724D5 /* Images.xcassets in Resources */,
				4C885CAC23E9AA43004724D5 /* Montserrat.ttf in Resources */,
				4C885CB123E9AA43004724D5 /* Launch ScreenVip223.storyboard in Resources */,
				4C885CB223E9AA43004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885CB323E9AA43004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB4F23EAD24000AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885CB423E9AA43004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885CB523E9AA43004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885CC723E9AA5A004724D5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885CC823E9AA5A004724D5 /* fontello.ttf in Resources */,
				4C5EC3F624635C04007C403E /* Images.xcassets in Resources */,
				4C885CC923E9AA5A004724D5 /* InfoPlist.strings in Resources */,
				4C885CD023E9AA5A004724D5 /* Montserrat.ttf in Resources */,
				4C885CD123E9AA5A004724D5 /* Launch ScreenLana.storyboard in Resources */,
				4C885CD623E9AA5A004724D5 /* Montserrat-Bold.ttf in Resources */,
				4C885CD723E9AA5A004724D5 /* Montserrat-Medium.ttf in Resources */,
				4C34BB5123EAD27B00AB0B1A /* GoogleService-Info.plist in Resources */,
				4C885CD823E9AA5A004724D5 /* Montserrat-Regular.ttf in Resources */,
				4C885CD923E9AA5A004724D5 /* Montserrat-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		04009B97EC9F6133FD444FFE /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-taxi-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		0829BA4CFB39561DDF9C7867 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-6226/Pods-6226-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-6226/Pods-6226-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		0A35585BCE5A2A73B1FE840B /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		10608032D41054CAEF32756B /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		1C138DB827C4C2F6B73BE2A0 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-taxi/Pods-taxi-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-taxi/Pods-taxi-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		1F19EE709E7209A98D19BBC3 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Ternopil-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		27B57751B87424850F3E8EAB /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-981-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		314859DE50AB236F84737EE1 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-vipkp223/Pods-vipkp223-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-vipkp223/Pods-vipkp223-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		388E4908200D637D5020CC80 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-334/Pods-334-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-334/Pods-334-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		430495608EC4AB078E065F2E /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Lana/Pods-Lana-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Lana/Pods-Lana-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		472A323E59212982C113A2AE /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Lana-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		4C4BC0422418EA84005D8B47 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Lviv-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		4C4BC0432418EA84005D8B47 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C4BC0552418EA84005D8B47 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C4BC0562418EA84005D8B47 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Lviv/Pods-Lviv-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Lviv/Pods-Lviv-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		4C4BC0572418EA84005D8B47 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		4C885BE723E96DBA004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885C0123E96DBA004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885C0C23E9A554004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885C2623E9A554004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885C3023E9A570004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885C4A23E9A570004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885C5423E9AA2F004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885C6E23E9AA2F004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885C7823E9AA3A004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885C9223E9AA3A004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885C9C23E9AA43004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885CB623E9AA43004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4C885CC023E9AA5A004724D5 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		4C885CDA23E9AA5A004724D5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n\n";
		};
		4CFC972823D222AC003A00A7 /* SomeScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SomeScript;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\nexport RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\nif nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\nif ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\necho \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\nexit 2\nfi\nelse\nopen \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\nfi\nfi\n";
		};
		74BB549A92BFAFD988C032FB /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Ternopil/Pods-Ternopil-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Ternopil/Pods-Ternopil-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		7BCF21EC77C8957DE172AB69 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-vipkp223-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		7ED57DCEAB1C197D3BCC9B7E /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		A3553712319243C3B42861B0 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-505/Pods-505-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-505/Pods-505-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		A922A19609B95192C869BBB4 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		AEBA59053D430F8E826434C1 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		AF8F54AFD36B8A686AE87D70 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-6226-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		B2741E56D3B3C5629BCDD712 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		B7D397A3B2DC5703ECF4ABDC /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		C5806A47FD2148F7C20D827B /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-334-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		C7761CC2F9FE1090258B7B50 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-981/Pods-981-resources.sh",
				"${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-981/Pods-981-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		ECB0635C628B1EC00523CA6D /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n";
		};
		EDE18A6EB166FF88652195B5 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-505-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C4BC0442418EA84005D8B47 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C4BC0452418EA84005D8B47 /* AppDelegate.m in Sources */,
				4C4BC0462418EA84005D8B47 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885BE823E96DBA004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885BE923E96DBA004724D5 /* AppDelegate.m in Sources */,
				4C885BEA23E96DBA004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C0D23E9A554004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C0E23E9A554004724D5 /* AppDelegate.m in Sources */,
				4C885C0F23E9A554004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C3123E9A570004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C3223E9A570004724D5 /* AppDelegate.m in Sources */,
				4C885C3323E9A570004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C5523E9AA2F004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C5623E9AA2F004724D5 /* AppDelegate.m in Sources */,
				4C885C5723E9AA2F004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C7923E9AA3A004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C7A23E9AA3A004724D5 /* AppDelegate.m in Sources */,
				4C885C7B23E9AA3A004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885C9D23E9AA43004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885C9E23E9AA43004724D5 /* AppDelegate.m in Sources */,
				4C885C9F23E9AA43004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C885CC123E9AA5A004724D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C885CC223E9AA5A004724D5 /* AppDelegate.m in Sources */,
				4C885CC323E9AA5A004724D5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		13B07FB11A68108700A75B9A /* LaunchScreen.xib */ = {
			isa = PBXVariantGroup;
			children = (
				13B07FB21A68108700A75B9A /* Base */,
			);
			name = LaunchScreen.xib;
			path = taxi;
			sourceTree = "<group>";
		};
		6D85111F235EEB7C00985468 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				6D85111E235EEB7C00985468 /* en */,
				6D851154235EFB2800985468 /* uk */,
				6D851156235EFB3900985468 /* ru */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 09C567BA811211554A7BD35B /* Pods-taxi.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = taxi/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.oktaxi2299;
				PRODUCT_NAME = Ok.2299;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0A66160C9D2091090A4D99D2 /* Pods-taxi.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = taxi/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.oktaxi2299;
				PRODUCT_NAME = Ok.2299;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C4BC0592418EA84005D8B47 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 863FAD85D06F7634CEED6374 /* Pods-Lviv.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-8";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-mapslibios/**",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-image-pickerios",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-reanimatedios/**",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-gesture-handlerios/**",
					"$(SRCROOT)..",
					"ode_modules@react-native-community\async-storageios",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-locationios",
					"$(SRCROOT)..",
					"ode_modules@react-native-community",
					etinfoios,
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..",
					ode_modules,
					"eact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Lviv/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.clientLviv7070;
				PRODUCT_NAME = "Економ 7070";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C4BC05A2418EA84005D8B47 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 180DECBFB49FAD1CA44FE1E1 /* Pods-Lviv.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-8";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Lviv/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.clientLviv7070;
				PRODUCT_NAME = "Економ 7070";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885C0523E96DBA004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F7514C9F55F1D6301AEEA065 /* Pods-505.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-1";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/505/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.taxi505;
				PRODUCT_NAME = "Такси 505";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885C0623E96DBA004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 58656E16CBFCBFA5FEAF06BF /* Pods-505.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-1";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/505/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.taxi505;
				PRODUCT_NAME = "Такси 505";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885C2A23E9A554004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F78D45C8FA972927267E3CE6 /* Pods-Ternopil.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-2";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Ternopil/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client2299tern;
				PRODUCT_NAME = "Таксі Комфорт Тернопіль";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885C2B23E9A554004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 69E6392159BF3E3148AFF3F8 /* Pods-Ternopil.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-2";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Ternopil/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client2299tern;
				PRODUCT_NAME = "Таксі Комфорт Тернопіль";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885C4E23E9A570004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 6CC8C0D0DE45305899F14D37 /* Pods-6226.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-3";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/6226/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client6226khm;
				PRODUCT_NAME = "Таксi 6226";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885C4F23E9A570004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 88E65EB2DF8B22190FEAA6F3 /* Pods-6226.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-3";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/6226/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client6226khm;
				PRODUCT_NAME = "Таксi 6226";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885C7223E9AA2F004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2CFECB328555EC802B70F545 /* Pods-981.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-4";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/981/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client981khm;
				PRODUCT_NAME = "Таксi 981";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885C7323E9AA2F004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C17DB32C7155A43798365F3F /* Pods-981.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-4";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/981/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client981khm;
				PRODUCT_NAME = "Таксi 981";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885C9623E9AA3A004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C57A3CF157A67DB32398D689 /* Pods-334.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-5";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/334/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client334khm;
				PRODUCT_NAME = "Таксі 334";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885C9723E9AA3A004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 752B4923DEB5AD337B99C37F /* Pods-334.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-5";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/334/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.client334khm;
				PRODUCT_NAME = "Таксі 334";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885CBA23E9AA43004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 83A67EADCE5BC7F69433006F /* Pods-vipkp223.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-7";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/vipkp223/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.vipkp223;
				PRODUCT_NAME = "VIP Таксi Кам'янець-Подiльський";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885CBB23E9AA43004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 6F530F1F4E468540184B0BFC /* Pods-vipkp223.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-7";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/vipkp223/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.vipkp223;
				PRODUCT_NAME = "VIP Таксi Кам'янець-Подiльський";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		4C885CDE23E9AA5A004724D5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8A0942118690D6C32B964742 /* Pods-Lana.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-6";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules@react-native-community\async-storageios",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Lana/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.clientLana;
				PRODUCT_NAME = "Таксі Lana";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		4C885CDF23E9AA5A004724D5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9A9B490ADCCB256A2E03452B /* Pods-Lana.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "AppIcon-6";
				CODE_SIGN_ENTITLEMENTS = taxi/taxi.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = P8HU8BF4TT;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)..\node_modules\neact-native-mapslibios/**",
					"$(SRCROOT)..\node_modules\neact-native-image-pickerios",
					"$(SRCROOT)..\node_modules\neact-native-reanimatedios/**",
					"$(SRCROOT)..\node_modules\neact-native-gesture-handlerios/**",
					"$(SRCROOT)..\node_modules\neact-native-locationios",
					"$(SRCROOT)..\node_modules@react-native-community\netinfoios",
					"$(SRCROOT)..\node_modules\neact-native-cloudipspiosRNCloudipsp/**",
					"$(SRCROOT)..\node_modules\neact-native-geocoderiosRNGeocoder",
				);
				INFOPLIST_FILE = targets/Lana/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 0.7.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = it.stocksoft.clientLana;
				PRODUCT_NAME = "Таксі Lana";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "";
				INFOPLIST_PREFIX_HEADER = "";
				INFOPLIST_PREPROCESS = NO;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "";
				INFOPLIST_PREFIX_HEADER = "";
				INFOPLIST_PREPROCESS = NO;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "taxi" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C4BC0582418EA84005D8B47 /* Build configuration list for PBXNativeTarget "Lviv" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C4BC0592418EA84005D8B47 /* Debug */,
				4C4BC05A2418EA84005D8B47 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885C0423E96DBA004724D5 /* Build configuration list for PBXNativeTarget "505" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885C0523E96DBA004724D5 /* Debug */,
				4C885C0623E96DBA004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885C2923E9A554004724D5 /* Build configuration list for PBXNativeTarget "Ternopil" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885C2A23E9A554004724D5 /* Debug */,
				4C885C2B23E9A554004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885C4D23E9A570004724D5 /* Build configuration list for PBXNativeTarget "6226" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885C4E23E9A570004724D5 /* Debug */,
				4C885C4F23E9A570004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885C7123E9AA2F004724D5 /* Build configuration list for PBXNativeTarget "981" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885C7223E9AA2F004724D5 /* Debug */,
				4C885C7323E9AA2F004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885C9523E9AA3A004724D5 /* Build configuration list for PBXNativeTarget "334" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885C9623E9AA3A004724D5 /* Debug */,
				4C885C9723E9AA3A004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885CB923E9AA43004724D5 /* Build configuration list for PBXNativeTarget "vipkp223" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885CBA23E9AA43004724D5 /* Debug */,
				4C885CBB23E9AA43004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C885CDD23E9AA5A004724D5 /* Build configuration list for PBXNativeTarget "Lana" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C885CDE23E9AA5A004724D5 /* Debug */,
				4C885CDF23E9AA5A004724D5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "taxi" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
